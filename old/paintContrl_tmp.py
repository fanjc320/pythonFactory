import matplotlib
matplotlib.use('TkAgg')  # 使用 Tkinter 后端
# matplotlib.use('Qt5Agg')  # 如果安装了 PyQt5/PySide2

import matplotlib.pyplot as plt
import numpy as np
from matplotlib.patches import Polygon

# 简易心形
# Define coordinates (example: a trapezoid)
# data = [
# (10.00, 30.00),
# (10.00, 18.96),
# (18.96, 10.00),
# (30.00, 10.00),
# (41.04, 10.00),
# (50.00, 18.96),
# (50.00, 30.00),
# (50.00, 18.96),
# (58.96, 10.00),
# (70.00, 10.00),
# (81.04, 10.00),
# (90.00, 18.96),
# (90.00, 30.00),
# (90.00, 50.00),
# (76.67, 70.00),
# (50.00, 90.00),
# (23.33, 70.00),
# (10.00, 50.00),
# (10.00, 30.00),
# (10.00, 30.00),
# (10.00, 30.00)
# ]
#详细心形数据
data = [
(10.00, 30.00),
(10.07, 28.36),
(10.26, 26.76),
(10.58, 25.20),
(11.02, 23.68),
(11.57, 22.22),
(12.23, 20.81),
(13.00, 19.47),
(13.86, 18.19),
(14.82, 16.99),
(15.86, 15.86),
(16.99, 14.82),
(18.19, 13.86),
(19.47, 13.00),
(20.81, 12.23),
(22.22, 11.57),
(23.68, 11.02),
(25.20, 10.58),
(26.76, 10.26),
(28.36, 10.07),
(30.00, 10.00),
(31.64, 10.07),
(33.24, 10.26),
(34.80, 10.58),
(36.32, 11.02),
(37.78, 11.57),
(39.19, 12.23),
(40.53, 13.00),
(41.81, 13.86),
(43.01, 14.82),
(44.14, 15.86),
(45.18, 16.99),
(46.14, 18.19),
(47.00, 19.47),
(47.77, 20.81),
(48.43, 22.22),
(48.98, 23.68),
(49.42, 25.20),
(49.74, 26.76),
(49.93, 28.36),
(50.00, 30.00),
(50.00, 29.67),
(50.10, 28.04),
(50.32, 26.44),
(50.66, 24.89),
(51.12, 23.38),
(51.70, 21.93),
(52.38, 20.54),
(53.16, 19.21),
(54.04, 17.94),
(55.02, 16.76),
(56.08, 15.65),
(57.22, 14.62),
(58.44, 13.68),
(59.73, 12.84),
(61.09, 12.09),
(62.51, 11.45),
(63.98, 10.92),
(65.50, 10.51),
(67.08, 10.21),
(69.34, 10.01),
(70.00, 10.00),
(71.64, 10.07),
(73.24, 10.26),
(74.80, 10.58),
(76.32, 11.02),
(77.78, 11.57),
(79.19, 12.23),
(80.53, 13.00),
(81.81, 13.86),
(83.01, 14.82),
(84.14, 15.86),
(85.18, 16.99),
(86.14, 18.19),
(87.00, 19.47),
(87.77, 20.81),
(88.43, 22.22),
(88.98, 23.68),
(89.42, 25.20),
(89.74, 26.76),
(89.93, 28.36),
(90.00, 30.00),
(89.94, 32.40),
(89.74, 34.80),
(89.42, 37.20),
(88.98, 39.60),
(88.40, 42.00),
(87.70, 44.40),
(86.86, 46.80),
(85.90, 49.20),
(84.82, 51.60),
(83.60, 54.00),
(81.90, 57.00),
(80.00, 60.00),
(77.90, 63.00),
(75.60, 66.00),
(73.10, 69.00),
(70.40, 72.00),
(67.50, 75.00),
(64.40, 78.00),
(61.10, 81.00),
(57.60, 84.00),
(53.90, 87.00),
(50.00, 90.00),
(49.20, 89.40),
(45.34, 86.40),
(41.68, 83.40),
(38.22, 80.40),
(34.96, 77.40),
(31.90, 74.40),
(29.04, 71.40),
(26.38, 68.40),
(23.92, 65.40),
(21.66, 62.40),
(19.60, 59.40),
(17.74, 56.40),
(16.40, 54.00),
(15.18, 51.60),
(14.10, 49.20),
(13.14, 46.80),
(12.30, 44.40),
(11.60, 42.00),
(11.02, 39.60),
(10.58, 37.20),
(10.26, 34.80),
(10.06, 32.40)
]

data1 = [
(64.40, 78.00),
(70.40, 72.00),
(67.50, 75.00),
(73.10, 69.00),
(61.10, 81.00),
(57.60, 84.00),
(75.60, 66.00),
(53.90, 87.00),
(77.90, 63.00),
(50.00, 90.00),
(80.00, 60.00),
(81.90, 57.00),
(49.20, 89.40),
(83.60, 54.00),
(84.82, 51.60),
(85.90, 49.20),
(86.86, 46.80),
(87.70, 44.40),
(45.34, 86.40),
(88.40, 42.00),
(88.98, 39.60),
(89.42, 37.20),
(41.68, 83.40),
(89.74, 34.80),
(89.94, 32.40),
(90.00, 30.00),
(38.22, 80.40),
(89.93, 28.36),
(89.74, 26.76),
(89.42, 25.20),
(88.98, 23.68),
(34.96, 77.40),
(88.43, 22.22),
(87.77, 20.81),
(87.00, 19.47),
(31.90, 74.40),
(86.14, 18.19),
(85.18, 16.99),
(29.04, 71.40),
(84.14, 15.86),
(83.01, 14.82),
(81.81, 13.86),
(26.38, 68.40),
(80.53, 13.00),
(79.19, 12.23),
(77.78, 11.57),
(23.92, 65.40),
(76.32, 11.02),
(74.80, 10.58),
(21.66, 62.40),
(73.24, 10.26),
(71.64, 10.07),
(70.00, 10.00),
(50.00, 30.00),
(19.60, 59.40),
(49.93, 28.36),
(49.74, 26.76),
(49.42, 25.20),
(17.74, 56.40),
(48.98, 23.68),
(48.43, 22.22),
(16.40, 54.00),
(47.77, 20.81),
(15.18, 51.60),
(47.00, 19.47),
(46.14, 18.19),
(14.10, 49.20),
(45.18, 16.99),
(44.14, 15.86),
(13.14, 46.80),
(43.01, 14.82),
(12.30, 44.40),
(41.81, 13.86),
(11.60, 42.00),
(40.53, 13.00),
(39.19, 12.23),
(11.02, 39.60),
(37.78, 11.57),
(10.58, 37.20),
(36.32, 11.02),
(34.80, 10.58),
(10.26, 34.80),
(33.24, 10.26),
(10.06, 32.40),
(31.64, 10.07),
(30.00, 10.00),
(10.00, 30.00),
(10.07, 28.36),
(28.36, 10.07),
(10.26, 26.76),
(26.76, 10.26),
(10.58, 25.20),
(25.20, 10.58),
(11.02, 23.68),
(23.68, 11.02),
(11.57, 22.22),
(22.22, 11.57),
(12.23, 20.81),
(20.81, 12.23),
(13.00, 19.47),
(19.47, 13.00),
(13.86, 18.19),
(18.19, 13.86),
(16.99, 14.82),
(14.82, 16.99),
(15.86, 15.86),
(50.00, 29.67),
(69.34, 10.01),
(50.10, 28.04),
(67.08, 10.21),
(50.32, 26.44),
(65.50, 10.51),
(50.66, 24.89),
(63.98, 10.92),
(51.12, 23.38),
(62.51, 11.45),
(51.70, 21.93),
(61.09, 12.09),
(52.38, 20.54),
(59.73, 12.84),
(53.16, 19.21),
(58.44, 13.68),
(54.04, 17.94),
(57.22, 14.62),
(55.02, 16.76),
(56.08, 15.65),
]
# Create plot
fig, ax = plt.subplots(constrained_layout=True)
# plt.figure(figsize=(10, 10))
# plt.rcParams['figure.figsize'] = [16, 8]
fig.set_size_inches(10,10)

# polygonU = Polygon(coords_up, closed=True, edgecolor='grey', facecolor='grey', alpha=0.5)
# polygonD = Polygon(coords_down, closed=True, edgecolor='grey', facecolor='grey', alpha=0.5)
polygonU = Polygon(data, closed=True, facecolor='grey', alpha=0.5)
polygonU1 = Polygon(data1, closed=True, facecolor='grey', alpha=0.5)
ax.add_patch(polygonU)
ax.add_patch(polygonU1)

# Adjust axes to fit the polygon
ax.set_xlim(0, 100)
ax.set_ylim(-50, 100)
ax.invert_yaxis()
ax.set_aspect(1)
# fig.subplots_adjust(left=0, right=1, top=1, bottom=0)

plt.grid(True)
# Annotate each point with its coordinate.
# for i in range(len(data)):
#     plt.annotate(f'{data[i]}', data[i], textcoords="offset points", xytext=(0,5), ha='center')
# for i in range(len(data1)):
#     plt.annotate(f'{data1[i]}', data1[i], textcoords="offset points", xytext=(0,5), ha='center')
# ---------------------------------



plt.show()